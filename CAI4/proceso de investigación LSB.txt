Para este proceso de investigación se utilizará una firma de muestra de 512 caracteres generada aleatoriamente mediante la herramienta de generación de textos Lorem Ipsum (véase ejemplo_firma_3.txt). Esta firma será guardada en un fichero de extensión txt, el cual utilizaremos como mensaje a codificar.

Dentro del proceso de investigación se utilizarán como estego objeto varias imágenes distintas, todas en formato BMP, que resultan ser reescalados de una misma imagen con las siguientes características:

- 400x267 px --> 417 KB
- 640x426 px --> 798 KB
- 1285x853 px --> 3.12 MB
- 1920x1280 px --> 7.03 MB
- 5184x3456 px --> 51.2 MB

Una vez que tenemos los materiales de estudio plasmados, tomaremos la herramienta vsl 1.1 y comenzaremos a ocultar este mensaje en las distintas imágenes para responder al primer requisito: ¿Qué tamaño debe tener la imagen original para que la firma quede oculta (sin tener que aumentar el tamaño de la imagen original)?

En primer lugar es necesario tener en cuenta las limitaciones técnicas del algoritmo. LSB requiere un mínimo de 8 píxeles para poder esconder un byte. Teniendo en cuenta que las firmas van a tener un tamaño de entre 128 y 512 caracteres, vamos a necesitar un mínimo de 128 a 512 píxeles, pues cada caracter tiene un peso de 1 byte en cualquier arquitectura. Para asegurar un tamaño mínimo seguro, el extremo mínimo de una imagen debería de ser de un tamaño de 32x32 px, con un total de 1024 píxeles. Una imagen de 32x32 px no es nada conveniente de cara a envíos de radiografías, pues la misma información superficial de la misma radiografía se volvería inaccesible, por lo que se va a estudiar la viabilidad del uso de distintos tamaños. 

Tras introducir todas las imágenes como input dentro de la herramienta, al mostrar los resultados no se han detectado visualmente a primera vista ninguna traza evidente del mensaje de 512 caracteres oculto. A medida que la resolución de las imagenes se reduce, comienza a verse de forma más visible que se ha producido algún tipo de modificación a la imagen, pero no resulta nada evidente a primera vista.

Podría apurarse más la reducción de tamaño mediante más reescalado de las imágenes. Si por ejemplo se utlizara un reescalado de dicha imagen de 200x133 px el resultado seguiría siendo el mismo. Sin embargo, el uso de estas imagenes puede resultar algo sospechoso o poco práctico de cara a disimular que se está aplicando un proceso de esteganografía, además de que se vuelve a errar en el aspecto de la propia información superficial contenida en la imagen.

Partiendo de los resultados (visibles en las carpeta "resultados lsb vsl"), para mantener un aspecto razonable y discreto, se recomienda el uso de imágenes de 640x267 o 1280x853 gracias a su relación calidad-peso.

Una vez estudiado el tamaño de las imágenes recomendables para la esteganografía, se solicita el estudio de la confidencialidad de l-as firmas ocultas. Como se ha explicado previamente, al aplicar el algoritmo de LSB en las imagenes anteriores a primera vista no se puede observar ningún tipo de distorsión grave. Sin embargo, es cierto que las firmas pueden ser descubiertas por defectos en el algrotimo o una vez que se utiliza un proceso de decodificación. La resistencia a dichos procesos de decodificación se estudiará en otro apartado. En este apartado se proporcionarán algunas sugerencias de cómo mejorar la confidencialidad. Para ello, se tomará inspiración a partir del paper "Analysis of LSB based image steganography techniques" redactado por Rajarathnam Chandramouli y Nasir D. Memon. 

Pueden existir casos en los que la imagen portadora del mensaje oculto por el hecho de aplicarle el algoritmo sufra modificaciones que resulten signos evidentes de uso de esteganografía para cualquier estegoanalista con un mínimo de experiencia en el campo. Es por ello que se suelen dar 2 recomendaciones para fortalecer la confidencialidad del proceso de comunicación:

1) Cifrar el mensaje a ocultar: El proceso del algoritmo LSB consiste en la sustitución del último bit de cada pixel para ocultar un mensaje. Sin embargo, cuando este mensaje sigue un patrón muy evidente (por ejemplo, cadenas de texto similares) el estego objeto deja marcas evidentes de dichos patrones. Es por ello que se recomienda cifrar el mensaje a ocultar previamente al proceso de esteganografía. De esta forma se obtienen dos metas importantes:

- Añadir una falsa aleatoriedad para camuflar posibles patrones
- Añadir una capa extra de confidencialidad en caso de que se extraiga con éxito el mensaje oculto 

2) Seleccionar los bits de ocultación: si se realiza una conveniente elección de un subconjunto de pixeles en los que ocultar el mensaje se puede camuflar mucho mejor el inconveniente que se genera por defecto al utilizar este algoritmo. Por lo general se suele utilizar una semilla para generar posiciones pseudoaleatorias para alcanzar esta manipulación. 

En tercer lugar es necesario estudiar el tiempo que tarda en embeber y en extraer las firmas ocultas dentro de las imágenes. Para ello 